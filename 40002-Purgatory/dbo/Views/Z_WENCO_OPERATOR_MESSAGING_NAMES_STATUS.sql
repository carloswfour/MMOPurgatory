

/*
--KDaws 21/Oct/2010 - Changed to LEFT JOIN on EQUIP_SUB_STATUS_CODE
					- Added shift_date and shift_ident
--KDaws 10/Jun/2012 - Reworked OM to EST join, improved efficiency
--KDaws 11/Aug/2013 - Doesn't work for operators who are still badged in, added ISNULL(SBT.END_TIMESTAMP,GETDATE().
					- Also shows messages sent with NULL badges.
					- Doesn't work for units that are still in the same status, added ISNULL(EST.END_TIMESTAMP,GETDATE()).
*/

CREATE VIEW [dbo].[Z_WENCO_OPERATOR_MESSAGING_NAMES_STATUS]
AS

SELECT		
OM.EVENT_GUID,
OM.LOG_TIMESTAMP,
OM.SHIFT_DATE,
OM.SHIFT_IDENT,
OM.EQUIP_IDENT,
SB.FIRST_NAME + ' ' + SB.LAST_NAME AS SEND_BADGE,
OM.MESSAGE_TO,
RB.FIRST_NAME + ' ' + RB.LAST_NAME AS RECV_BADGE,
OM.EVENT_ID,
OM.ENGLISH_MESSAGE,
EST.STATUS_CODE,
EST.SUB_STATUS_CODE, 
ESC.STATUS_DESC,
ESSC.SUB_STATUS_DESC
FROM Z_WENCO_OPERATOR_MESSAGING AS OM
LEFT OUTER JOIN WencoReport.dbo.EQUIPMENT_STATUS_TRANS AS EST
ON OM.SHIFT_DATE = EST.SHIFT_DATE
AND OM.SHIFT_IDENT = EST.SHIFT_IDENT
AND OM.EQUIP_IDENT = EST.EQUIP_IDENT
AND OM.LOG_TIMESTAMP BETWEEN EST.START_TIMESTAMP AND ISNULL(EST.END_TIMESTAMP,GETDATE())
INNER JOIN WencoReport.dbo.EQUIP_STATUS_CODE AS ESC
ON EST.STATUS_CODE = ESC.STATUS_CODE
LEFT OUTER JOIN WencoReport.dbo.EQUIP_SUB_STATUS_CODE AS ESSC
ON ESC.STATUS_CODE = ESSC.STATUS_CODE
AND EST.SUB_STATUS_CODE = ESSC.SUB_STATUS_CODE
LEFT OUTER JOIN WencoReport.dbo.BADGE_TRANS AS SBT
ON OM.EQUIP_IDENT = SBT.EQUIP_IDENT
AND OM.SHIFT_DATE = SBT.SHIFT_DATE
AND OM.SHIFT_IDENT = SBT.SHIFT_IDENT
AND OM.LOG_TIMESTAMP BETWEEN SBT.START_TIMESTAMP AND ISNULL(SBT.END_TIMESTAMP,GETDATE())
AND SBT.IS_PRIMARY_BADGE = 'Y'
LEFT OUTER JOIN WencoReport.dbo.BADGE AS SB ON SB.BADGE_IDENT = SBT.BADGE_IDENT
LEFT OUTER JOIN WencoReport.dbo.BADGE_TRANS AS RBT
ON OM.MESSAGE_TO = RBT.EQUIP_IDENT
AND OM.SHIFT_DATE = RBT.SHIFT_DATE
AND OM.SHIFT_IDENT = RBT.SHIFT_IDENT
AND OM.LOG_TIMESTAMP BETWEEN RBT.START_TIMESTAMP AND ISNULL(RBT.END_TIMESTAMP,GETDATE())
AND RBT.IS_PRIMARY_BADGE = 'Y'
LEFT OUTER JOIN WencoReport.dbo.BADGE AS RB ON RB.BADGE_IDENT = RBT.BADGE_IDENT


/*
SELECT	OM.EVENT_GUID, OM.LOG_TIMESTAMP, OM.shift_date, OM.shift_ident, OM.equip_ident AS sender_equip_ident, SB.FIRST_NAME + ' ' + SB.LAST_NAME AS sender, 
		OM.message_to AS receiver_equip_ident, RB.FIRST_NAME + ' ' + RB.LAST_NAME AS receiver, OM.EVENT_ID, OM.english_message, 
		EST.STATUS_CODE, EST.SUB_STATUS_CODE, 
		dbo.EQUIP_STATUS_CODE.STATUS_DESC, dbo.EQUIP_SUB_STATUS_CODE.SUB_STATUS_DESC
FROM	dbo.Z_WENCO_OPERATOR_MESSAGING AS OM
		INNER JOIN EQUIPMENT_STATUS_TRANS AS EST ON OM.SHIFT_DATE = EST.SHIFT_DATE AND OM.SHIFT_IDENT = EST.SHIFT_IDENT
			AND OM.equip_ident = EST.EQUIP_IDENT AND OM.LOG_TIMESTAMP BETWEEN EST.START_TIMESTAMP AND EST.END_TIMESTAMP
		INNER JOIN dbo.EQUIP_STATUS_CODE ON EST.STATUS_CODE = dbo.EQUIP_STATUS_CODE.STATUS_CODE
		LEFT JOIN dbo.EQUIP_SUB_STATUS_CODE ON dbo.EQUIP_STATUS_CODE.STATUS_CODE = dbo.EQUIP_SUB_STATUS_CODE.STATUS_CODE
			AND EST.SUB_STATUS_CODE = dbo.EQUIP_SUB_STATUS_CODE.SUB_STATUS_CODE
		RIGHT OUTER JOIN dbo.BADGE AS SB
		INNER JOIN dbo.BADGE_TRANS AS SBT ON SB.BADGE_IDENT = SBT.BADGE_IDENT ON OM.LOG_TIMESTAMP BETWEEN SBT.START_TIMESTAMP AND SBT.END_TIMESTAMP
			AND OM.equip_ident = SBT.EQUIP_IDENT
		RIGHT OUTER JOIN dbo.BADGE_TRANS AS RBT
		INNER JOIN dbo.BADGE AS RB ON RBT.BADGE_IDENT = RB.BADGE_IDENT ON OM.LOG_TIMESTAMP BETWEEN RBT.START_TIMESTAMP AND RBT.END_TIMESTAMP
			AND OM.message_to = RBT.EQUIP_IDENT
*/